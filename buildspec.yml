version: 0.2
env:
  variables:
    TAG: "latest"
    AWS_DEFAULT_REGION: "us-west-1"
    DOCKER_CONTAINER_NAME: "aws-codepipeline-deploy-ecr"
    ACCOUNT_ID: "520675424784"
phases:
  install:
    commands:
      - echo Installing necessary dependencies...
      - pip install awscli
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - REPOSITORY_URI="$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$DOCKER_CONTAINER_NAME"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}') # Dynamic image tag based on the build ID

  build:
    commands:
      - echo Build started on `date`
      - echo Building the JAR file...
      - mvn clean install # Replace with your specific build command if needed
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to Amazon ECR...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Printing imagedefinitions.json:
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
    - target/aws-codepipeline-deploy.jar
